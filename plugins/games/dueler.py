from handler.base_plugin import BasePlugin
from vk.helpers import parse_user_id

import peewee_async, peewee, asyncio, random, time

# Requirements:
# PeeweePlugin
#

class DuelerPlugin(BasePlugin):
    __slots__ = ("commands", "prefixes", "models", "pwmanager", "active")

    def __init__(self, prefixes=("",), _help="–ø–æ–º–æ—â—å", me="—è", pay="–∑–ø", duel="–≤—ã–∑–æ–≤", top="—Ç–æ–ø",
                 accept="–ø—Ä–∏–Ω—è—Ç—å", auct="–∞—É–∫—Ü–∏–æ–Ω", bet="—Å—Ç–∞–≤–∫–∞", add="–¥–æ–±–∞–≤–∏—Ç—å", remove="—É–¥–∞–ª–∏—Ç—å", postprefix="–¥—É—ç–ª–∏"):
        """Nice game "Dueler"."""

        super().__init__()

        self.commands = [(postprefix + " " if postprefix else "") + c.lower() for c in (me, _help, pay, duel, accept, auct, bet, add, remove, top)]  # [-1] == [9]
        self.prefixes = prefixes

        self.pwmanager = None
        self.models = []
        self.active = True

        self.description = ["–ò–≥—Ä–∞ \"Dueler\"",
                            f"{self.prefixes[0]}{self.commands[1]} - –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ."]

    def initiate(self):
        if self.pwmanager is None:
            raise ValueError("Please, use PeeweePlugin with set_manager=True for this plugin to work or set pwmanager for plugin yourself.")

        class Equipment(peewee.Model):
            name = peewee.TextField()
            slot = peewee.TextField()
            power = peewee.IntegerField()

            class Meta:
                database = self.pwmanager.database
                indexes = (
                    (('name', 'power', 'slot'), True),
                )

        class Player(peewee.Model):
            user_id = peewee.BigIntegerField()
            chat_id = peewee.BigIntegerField()

            last_payout = peewee.BigIntegerField(default=0)

            lastmsg = peewee.BigIntegerField(default=0)
            lastreq = peewee.BigIntegerField(default=0)

            state = peewee.IntegerField(default=0)
            money = peewee.IntegerField(default=0)

            wins = peewee.IntegerField(default=0)
            losses = peewee.IntegerField(default=0)

            helm = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="hemled")
            chest = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="chested")
            weapon = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="weaponed")\

            class Meta:
                database = self.pwmanager.database
                indexes = (
                    (('user_id', 'chat_id'), True),
                )

        class Auct(peewee.Model):
            chat_id = peewee.BigIntegerField()

            lot1 = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="lot1ed")
            lot2 = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="lot2ed")
            lot3 = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="lot3ed")
            lot4 = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="lot4ed")
            lot5 = peewee.ForeignKeyField(Equipment, on_delete='SET NULL', null=True, related_name="lot5ed")

            bet1 = peewee.IntegerField(default=0)
            bet2 = peewee.IntegerField(default=0)
            bet3 = peewee.IntegerField(default=0)
            bet4 = peewee.IntegerField(default=0)
            bet5 = peewee.IntegerField(default=0)

            buyer1 = peewee.BigIntegerField(default=0)
            buyer2 = peewee.BigIntegerField(default=0)
            buyer3 = peewee.BigIntegerField(default=0)
            buyer4 = peewee.BigIntegerField(default=0)
            buyer5 = peewee.BigIntegerField(default=0)

            endt = peewee.BigIntegerField(default=0)

            class Meta:
                database = self.pwmanager.database
                indexes = (
                    (('chat_id', ), True),
                )

        class Duel(peewee.Model):
            userid1 = peewee.BigIntegerField()
            userid2 = peewee.BigIntegerField()
            chat_id = peewee.BigIntegerField()

            class Meta:
                database = self.pwmanager.database
                indexes = (
                    (('chat_id', 'userid1', 'userid2'), True),
                )

        with self.pwmanager.allow_sync():
            Equipment.create_table(True)
            Player.create_table(True)
            Duel.create_table(True)
            Auct.create_table(True)

        self.models = Auct, Duel, Player, Equipment

    @staticmethod
    def get_level(score):
        e = 0

        for i in range(100):
            score -= e * 1.2 + 50

            if score <= 0:
                return i, -score

        return 100, -1

    async def global_before_message_checks(self, msg):
        msg.meta["__cplayer"] = await self.get_or_create_player(msg.chat_id, msg.user_id)

        if time.time() - msg.meta["__cplayer"].lastmsg < 15:
            return

        if msg.meta["__cplayer"].lastmsg == 0 or time.time() - msg.meta["__cplayer"].lastmsg < 60 * 5:
            msg.meta["__cplayer"].state = min(100, msg.meta["__cplayer"].state + 2)

        elif time.time() - msg.meta["__cplayer"].lastmsg < 60 * 10:
            msg.meta["__cplayer"].state = min(100, msg.meta["__cplayer"].state + 1)

        elif time.time() - msg.meta["__cplayer"].lastmsg < 60 * 20:
            msg.meta["__cplayer"].state = max(0, msg.meta["__cplayer"].state - 10)

        elif time.time() - msg.meta["__cplayer"].lastmsg >= 60 * 20:
            msg.meta["__cplayer"].state = max(0, msg.meta["__cplayer"].state - 50)

        msg.meta["__cplayer"].lastmsg = time.time()

    async def check_message(self, msg):
        prefix = None
        pltext = ""

        for p in self.prefixes:
            if msg.full_text.startswith(p):
                prefix = p
                pltext = msg.full_text.replace(p, "", 1)
                break

        if prefix is None:
            return False

        for c in self.commands:
            if pltext.startswith(c + " ") or pltext.startswith(c + "\n") or pltext == c:
                break
        else:
            return False

        msg.meta["__prefix"] = prefix
        msg.meta["__pltext"] = pltext

        return True

    async def get_or_create_player(self, chat_id, user_id):
        Auct, Duel, Player, Equipment = self.models

        try:
            equipments = (
                Equipment
                .select()
            )
            players = (
                Player
                .select()
                .where(
                    (Player.chat_id == chat_id) &
                    (Player.user_id == user_id)
                )
            )

            player = list(await self.pwmanager.prefetch(players, equipments))[0]
        except IndexError:
            player = await peewee_async.create_object(Player, chat_id=chat_id, user_id=user_id)

        return player

    async def get_or_create_auct(self, chat_id):
        Auct, Duel, Player, Equipment = self.models

        try:
            equipments = (
                Equipment
                .select()
            )
            aucts = (
                Auct
                .select()
                .where(
                    Auct.chat_id == chat_id
                )
            )

            auct = list(await self.pwmanager.prefetch(aucts, equipments))[0]
        except IndexError:
            auct = await peewee_async.create_object(Auct, chat_id=chat_id)

        return auct

    async def process_message(self, msg):
        if msg.meta["__pltext"].lower() == self.commands[1]:
            me, _help, pay, duel, accept, auct, bet, add, remove, top = self.commands
            p = self.prefixes[0]

            return await msg.answer(f'''–£ –∫–∞–∂–¥o–≥–æ —É—á–∞c—Ç–Ω–∏–∫a —á–∞—Ç–∞ –µ—Å—Ç—å —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –øe—Ä—Åo–Ω–∞–∂, –∏–º–µ—é—â–∏–π:
- –ûc–Ω–æ–≤–Ω–∞—è xapa–∫—Ç–µp–∏c—Ç–∏–∫–∞ - c–∏–ª—É üí™, –∑–æ–ª–æ—Ç–æ üí∞ –∏ c–Ωa—Ä—è–∂e–Ω–∏e (—à–ªe–º ‚õë, –±—Äo–Ω—è üõ°, –æ—Ä—É–∂–∏e ‚öî), –∫–æ—Çopoe —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É –ø–µ—Ä—Åo–Ωa–∂–∞ –∏ –øo–∫—É–ø–∞–µ—Ç—Å—è –Ωa a—É–∫—Ü–∏o–Ωe. –¢–∞–∫–∂e —É –øep—Å–æ–Ω–∞–∂–∞ e—Å—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤ %) - –æ–Ωo –æ–ø—Ä–µ–¥–µ–ª—è–µ—Çc—è –æ—Ç–Ω–æc–∏—Çe–ª—å–Ω–æ —Ç–µ–∫—É—âe–≥o –∞–∫—Ç–∏–≤–∞ —É—áac—Ç–Ω–∏–∫–∞ –≤ —áa—Çe.
- –ê—É–∫—Ü–∏o–Ω –ºo–∂–Ω–æ –øpo–≤o–¥–∏—Ç—å –Ω–µ —á–∞—âe, —áe–º p–∞–∑ –≤ —áa—Å, –∏ –∫–∞–∂–¥—ã–π pa–∑ –Ωa –Ωe–º –≤—ãc—Ç–∞–≤–ª—è—é—Ç—Å—è c–ª—É—á–∞–π–Ωo–µ —Å–Ωap—è–∂e–Ω–∏–µ —Å–æ c–ª—É—á–∞–π–Ω—ã–º–∏ x–∞—Ä–∞–∫—Ç–µ—Ä–∏c—Ç–∏–∫a–º–∏ (—áe–º –≤—ã—à–µ xap–∞–∫—Ç–µp–∏—Å—Ç–∏–∫–∏, —Çe–º p–µ–∂–µ –≤—ã–øa–¥ae—Ç).
- –†a–∑ –≤ —á–∞—Å –≤c–µ–º –ø–µp—Åo–Ω–∞–∂–∞–º —áa—Ç–∞ –º–æ–∂–Ωo –≤—ã–¥–∞–≤–∞—Ç—å –∂–∞–ª–æ–≤–∞–Ω–∏e - o–±—â–∞—è —Å—É–º–º–∞ –¥–ª—è —áa—Ça –∑–∞–≤–∏c–∏—Ç o—Ç –∫o–ª–∏—á–µc—Ç–≤a –∞–∫—Ç–∏–≤–Ω—ãx –≤ –øoc–ªe–¥–Ωee –≤—Äe–º—è —É—á–∞c—Ç–Ω–∏–∫–æ–≤, a –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂a–ªo–≤a–Ω–∏—è –Ω–∞ –∫a–∂–¥o–≥o –øepc–æ–Ωa–∂–∞ - –≤ –∑–∞–≤–∏c–∏–ºoc—Ç–∏ o—Ç –ø–æc–ª–µ–¥–Ω–µ–≥–æ –∞–∫—Ç–∏–≤–∞ —É—áa—Å—Ç–Ω–∏–∫–æ–≤ –æ—Ç–Ω–æ—Å–∏—Çe–ª—å–Ω–æ o–±—â–µ–≥–æ (—É –∂a–ª–æ–≤a–Ω–∏—è –Ω–µ—Ç –Ωa–∫o–ø–ª–µ–Ω–∏–π, e—Å–ª–∏ –Ωe –≤—ã–¥–∞–≤a—Ç—å –∂–∞–ªo–≤–∞–Ω–∏–µ - –æ–Ω–æ c–≥o—Äa–µ—Ç)
- –üe—Ä—Åo–Ωa–∂–∏ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤a—Ç—å –¥—Ä—É–≥ –¥p—É–≥–∞ –Ωa –¥—É—ç–ª–∏ (–∫a–∂–¥—ã–π –øepc–æ–Ω–∞–∂ –ºo–∂–µ—Ç –≤—ã–∑–≤a—Ç—å –ø—Ä–æ–≤–æ–¥–∏—Ç—å –¥—É—ç–ª—å —Äa–∑ –≤ —á–∞—Å)
–ù–∞ –¥—É—ç–ª–∏ cp–∞–≤–Ω–∏–≤–∞e—Ç—Å—è o–±—â–∞—è c–∏–ªa —É—á–∞c—Ç–Ω–∏–∫o–≤, –∫o—Ço—Ä–∞—è —è–≤–ª—èe—Çc—è c—É–º–ºo–π:
1) –≤c–µ–≥–æ c–Ωa—Ä—è–∂e–Ω–∏—è —É—áac—Ç–Ω–∏–∫a
2) —Å–æ—Å—Ç–æ—è–Ω–∏—è
3) —É–¥a—á–∏, –∫–∞–∂–¥—ã–π —Äa–∑ o–øp–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–ª—É—áa–π–Ω—ã–º o–±pa–∑o–º, –Ω–æ –Ω–µ –±o–ª—å—à–µ 15% o—Ç o–±—âe–π —Å–∏–ª—ã
–£ —Ç–æ–≥–æ, —É –∫o–≥–æ –∏—Ç–æ–≥–æ–≤–∞—è —Å–∏–ª–∞ –±o–ª—å—à–µ, –±–æ–ª—å—à–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π –ø–æ–±–µ–¥–∏—Ç—å!

–ö–æ–º–∞–Ω–¥—ã:
{p}{me} - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ.
{p}{pay} - —Å–æ–±—Ä–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ.
{p}{duel} -–≤—ã–∑–≤–∞—Ç—å –Ω–∞ –¥—É—ç–ª—å.
{p}{accept} -–ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤.
{p}{auct} - –Ω–∞—á–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω.
{p}{top} - –ø–æ–∫–∞–∑–∞—Ç—å –ª—É—á—à–∏—Ö –±–æ–π—Ü–æ–≤.
{p}{_help} - –ø–æ–º–æ—â—å''')

        Auct, Duel, Player, Equipment = self.models

        player = msg.meta["__cplayer"] or await self.get_or_create_player(msg.chat_id, msg.user_id)

        if msg.meta["__pltext"].lower().startswith(self.commands[9]):
            top = await self.pwmanager.execute(Player.select().where(Player.chat_id == msg.chat_id).order_by(Player.wins.desc()).limit(10))

            text = "üëë –°–∞–º—ã–µ –º–æ—â–Ω—ã–µ –∏–≥—Ä–æ–∫–∏:\n"

            users = {}
            if "__chat_data" in msg.meta:
                for u in msg.meta["__chat_data"].users:
                    users[u["id"]] = u["first_name"] + " " + u["last_name"]

            for i, player in enumerate(top):
                text += (
                    str(i + 1) + ". üòé " + users.get(player.user_id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å \"{player.user_id}\"") +
                    "\n–ü–æ–±–µ–¥: " + str(player.wins)  + " // –ü–æ—Ä–∞–∂–µ–Ω–∏–π: " + str(player.losses)  + "\n"
                )

            return await msg.answer(text)

        if msg.meta["__pltext"].lower().startswith(self.commands[8]):
            if not msg.meta.get("is_admin") and not msg.meta.get("is_moder"):
                return msg.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")

            try:
                name = " ".join(msg.meta["__pltext"][len(self.commands[8]):].strip().split(" "))

                if not name:
                    raise ValueError()
            except (ValueError, KeyError, IndexError):
                return await msg.answer("–ö–∞–∫ –Ω–∞–¥–æ: " + self.prefixes[0] + self.commands[8] + " [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞]")


            await self.pwmanager.execute(Equipment.delete().where(Equipment.name == name))

            return await msg.answer("–ì–æ—Ç–æ–≤–æ!")

        if msg.meta["__pltext"].lower().startswith(self.commands[7]):
            if not msg.meta.get("is_admin") and not msg.meta.get("is_moder"):
                return await msg.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")

            try:
                power, slot, *names = msg.meta["__pltext"][len(self.commands[7]):].strip().split(" ")

                name = " ".join(names)

                if not name:
                    raise ValueError()
            except (ValueError, KeyError, IndexError):
                return await msg.answer("–ö–∞–∫ –Ω–∞–¥–æ: " + self.prefixes[0] + self.commands[7] + " [—Å–∏–ª–∞] [—Å–ª–æ—Ç (helm, weapon –∏–ª–∏ chest)] [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞]")

            if slot not in ("helm", "weapon", "chest"):
                return await msg.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–ª—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏: helm, weapon, chest")

            for i in range(5):
                tpower = round((0.75 + random.random() * 0.5) * round(float(power)))

                try:
                    await peewee_async.create_object(Equipment, name=name, slot=slot, power=tpower)
                except peewee.IntegrityError:
                    pass

            return await msg.answer("–ì–æ—Ç–æ–≤–æ!")

        if msg.meta["__pltext"].lower().startswith(self.commands[6]):
            auct = await self.get_or_create_auct(msg.chat_id)

            if time.time() - auct.endt >= 0:
                return await msg.answer("–ê—É–∫—Ü–∏–æ–Ω –∑–∞–∫–æ–Ω—á–µ–Ω")

            try:
                _, lot, bet = msg.meta["__pltext"][len(self.commands[6]):].split(" ")
                bet = int(bet)
            except (KeyError, ValueError):
                return await msg.answer("–ö–∞–∫ –Ω–∞–¥–æ —Å—Ç–∞–≤–∏—Ç—å: " + self.prefixes[0] + self.commands[6] + " [–Ω–æ–º–µ—Ä –ª–æ—Ç–∞] [—Å—Ç–∞–≤–∫–∞]")

            olot = getattr(auct, f"lot{lot}")
            obet = getattr(auct, f"bet{lot}")
            obuyer = getattr(auct, f"buyer{lot}")

            if obet >= bet:
                return await msg.answer("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π!")

            if player.money < bet:
                return await msg.answer("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏!")

            if obuyer != 0:
                prbuyer = await self.get_or_create_player(msg.chat_id, obuyer)
                prbuyer.money += obet
                await self.pwmanager.update(prbuyer)

            player.money -= bet

            setattr(auct, f"bet{lot}", bet)
            setattr(auct, f"buyer{lot}", player.user_id)

            await self.pwmanager.update(auct)
            await self.pwmanager.update(player)

            text = "üí∞ –ê—É–∫—Ü–∏–æ–Ω:\n"

            for i in range(1, 6):
                olot = getattr(auct, f"lot{i}")
                obet = getattr(auct, f"bet{i}")

                text += (
                    f"{i}. " + ("‚õë" if olot.slot == "helm" else ("üõ°" if olot.slot == "chest" else "‚öî")) +
                    " " + olot.name + " (üí™ " + str(olot.power) + ") - " + str(obet) + "$\n"
                )

            text += "\n–ê—É–∫—Ü–∏–æ–Ω –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç. –í–µ—â–∏ –ø–æ–ª—É—á–∞—Ç –∏–≥—Ä–æ–∫–∏, –ø–æ—Å—Ç–∞–≤–∏–≤—à–∏–µ –Ω–∞–∏–±–æ–ª—å—à—É—é —Å—Ç–∞–≤–∫—É –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç. "\
                    "–ü—Ä–µ–¥–º–µ—Ç—ã –∑–∞–º–µ–Ω—è—Ç —Ç–µ–∫—É—â–∏–µ. –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–º –≤–µ—Ä–Ω—É—Ç –¥–µ–Ω—å–≥–∏.\n\n–°—Ç–∞–≤–∫–∞: " + self.prefixes[0] + self.commands[6] + " [–Ω–æ–º–µ—Ä –ª–æ—Ç–∞] [—Å—Ç–∞–≤–∫–∞]"

            return await msg.answer(text)

        if msg.meta["__pltext"].lower() == self.commands[5]:
            auct = await self.get_or_create_auct(msg.chat_id)

            if time.time() - auct.endt < 60 * 66:
                return await msg.answer(f"üí∞ –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∞—É–∫—Ü–∏–æ–Ω —á–µ—Ä–µ–∑ {66 - round((time.time() - auct.endt) / 60)} –º–∏–Ω.")

            equipments = list(await self.pwmanager.execute(Equipment.select()))

            if len(equipments) == 0:
                return await msg.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏.")

            if len(equipments) < 5:
                equipments = [equipments[0]] * 5

            random.shuffle(equipments)

            text = "üí∞ –ê—É–∫—Ü–∏–æ–Ω:\n"

            for i in range(5):
                setattr(auct, f"lot{i + 1}", equipments[i])
                setattr(auct, f"buyer{i + 1}", 0)

                bet = 0
                for _ in range(max(1, equipments[i].power - 3)):
                    bet += 20 + round(random.random() * 10)

                setattr(auct, f"bet{i + 1}", bet)

                text += (
                    f"{i + 1}. " + ("‚õë" if equipments[i].slot == "helm" else ("üõ°" if equipments[i].slot == "chest" else "‚öî")) +
                    " " + equipments[i].name + " (" + str(equipments[i].power) + ") - " + str(bet) + "$\n"
                )

            auct.endt = time.time() + 60 * 5

            await self.pwmanager.update(player)
            await self.pwmanager.update(auct)

            text += "\n–ê—É–∫—Ü–∏–æ–Ω –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç. –í–µ—â–∏ –ø–æ–ª—É—á–∞—Ç –∏–≥—Ä–æ–∫–∏, –ø–æ—Å—Ç–∞–≤–∏–≤—à–∏–µ –Ω–∞–∏–±–æ–ª—å—à—É—é —Å—Ç–∞–≤–∫—É –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç. "\
            "–ü—Ä–µ–¥–º–µ—Ç—ã –∑–∞–º–µ–Ω—è—Ç —Ç–µ–∫—É—â–∏–µ. –ü—Ä–æ–∏–≥—Ä–∞–≤—à–∏–º –≤–µ—Ä–Ω—É—Ç –¥–µ–Ω—å–≥–∏.\n\n–°—Ç–∞–≤–∫–∞: " + self.prefixes[0] + self.commands[6] + " [–Ω–æ–º–µ—Ä –ª–æ—Ç–∞] [—Å—Ç–∞–≤–∫–∞]"

            async def finish_auct(chat_id):
                await asyncio.sleep(60 * 5)

                auct = await self.get_or_create_auct(msg.chat_id)

                for i in range(1, 6):
                    olot = getattr(auct, f"lot{i}")
                    obuyer = getattr(auct, f"buyer{i}")

                    if obuyer == 0:
                        continue

                    p = await self.get_or_create_player(chat_id=chat_id, user_id=obuyer)

                    if olot.slot == "helm":
                        p.helm = olot
                    elif olot.slot == "chest":
                        p.chest = olot
                    else:
                        p.weapon = olot

                    await self.pwmanager.update(p)

                return await msg.answer("–ê—É–∫—Ü–∏–æ–Ω –∑–∞–∫–æ–Ω—á–µ–Ω.")

            asyncio.ensure_future(finish_auct(chat_id=msg.chat_id))

            return await msg.answer(text)

        if msg.meta["__pltext"].lower() == self.commands[4]:
            try:
                duel = await self.pwmanager.get(Duel, chat_id=msg.chat_id, userid2=msg.user_id)
            except Duel.DoesNotExist:
                return await msg.answer("–ù–∏–∫—Ç–æ –Ω–µ –≤—ã–∑—ã–≤–∞–ª –≤–∞—Å –Ω–∞ –¥—É—ç–ª—å!")

            player1 = await self.get_or_create_player(msg.chat_id, duel.userid1)
            player2 = player

            await peewee_async.delete_object(duel)

            level1, _ = self.get_level(player1.wins * 10 + player1.losses * 5)
            level2, _ = self.get_level(player2.wins * 10 + player2.losses * 5)

            epower1 = 9
            if player1.helm:
                epower1 += player1.helm.power
            if player1.chest:
                epower1 += player1.chest.power
            if player1.weapon:
                epower1 += player1.weapon.power
            apower1 = epower1 + round(epower1 * (player1.state / 100), 2)
            lpower1 = apower1 + round(apower1 * level1 / 100, 2)
            power1 = lpower1 + round(lpower1 * 0.15 * random.random(), 2)

            epower2 = 9
            if player2.helm:
                epower2 += player2.helm.power
            if player2.chest:
                epower2 += player2.chest.power
            if player2.weapon:
                epower2 += player2.weapon.power
            apower2 = epower2 + round(epower2 * (player2.state / 100), 2)
            lpower2 = apower2 + round(apower2 * level2 / 100, 2)
            power2 = lpower2 + round(lpower2 * 0.15 * random.random(), 2)

            player1win = random.random() * (power1 + power2) < power1

            users = await self.api.users.get(user_ids=f"{duel.userid1},{duel.userid2}")
            if len(users) == 1:
                users.append(users[0])

            text = (
                "–ë–∏—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π ü§∫\"" + users[0]["first_name"] + " " + users[0]["last_name"]  + "\" –∏ "
                "ü§∫\"" + users[1]["first_name"] + " " + users[1]["last_name"]  + "\"\n"
                "üí™ –£—Ä–æ–≤–Ω–∏: " + str(level1) + " / " + str(level2) + "\n"
                "üí™ C–æ—Å—Ç–æ—è–Ω–∏—è: " + str(player1.state) + "% / " + str(player2.state) + "%\n"
                "üí™ –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞: " + str(epower1) + " / " + str(epower2) + "\n"
                "üí™ –ê–∫—Ç–∏–≤ —Å–∏–ª–∞: " + str(round(apower1 - epower1, 2))  + " / " + str(round(apower2 - epower2, 2)) + "\n"
                "üí™ –°–∏–ª–∞ –æ–ø—ã—Ç–∞: " + str(round(lpower1 - apower1, 2))  + " / " + str(round(lpower2 - apower2, 2)) + "\n\n"
                "üí™ –°–∏–ª–∞ —É–¥–∞—á–∏: " + str(round(power1 - lpower1, 2))  + " / " + str(round(power2 - lpower2, 2)) + "\n\n"
                "üí™ –°–ò–õ–ê: " + str(round(power1, 2))  + " / " + str(round(power2, 2)) + "\n\n"
            )

            if player1win:
                text += (
                    "–ü–æ—Å–ª–µ –¥–æ–ª–≥–æ–π —Å—Ö–≤–∞—Ç–∫–∏, " + users[0]["first_name"] + " " + users[0]["last_name"] +
                    " –∏ " + (player1.weapon.name.lower() if player1.weapon else "–Ω–∏—á–µ–≥–æ") + " –ø—Ä–æ–±–∏–ª–∏ "
                    + (player2.chest.name.lower() if player2.chest else "–≥—Ä—É–¥—å") + " —Å–≤–æ–µ–≥–æ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞."
                )

                player1.wins += 1
                player1.money += 5
                player2.losses += 1
            else:
                text += (
                    "–ü–æ—Å–ª–µ –¥–æ–ª–≥–æ–π —Å—Ö–≤–∞—Ç–∫–∏, " + users[1]["first_name"] + " " + users[1]["last_name"] +
                    " –∏ " + (player2.weapon.name.lower() if player2.weapon else "–Ω–∏—á–µ–≥–æ") + " –ø—Ä–æ–±–∏–ª–∏ "
                    + (player1.chest.name.lower() if player1.chest else "–≥—Ä—É–¥—å") + " —Å–≤–æ–µ–≥–æ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞."
                )

                player2.wins += 1
                player2.money += 5
                player1.losses += 1

            text += "\n\n–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: " + (users[0]["first_name"] + " " + users[0]["last_name"] if player1win
                                          else users[1]["first_name"] + " " + users[1]["last_name"]) + " (–Ω–∞–≥—Ä–∞–¥–∞ - 5$)"

            await self.pwmanager.update(player1)
            await self.pwmanager.update(player2)

            return await msg.answer(text)

        if msg.meta["__pltext"].lower().startswith(self.commands[3]):
            if time.time() - player.lastreq < 60 * 3:
                 return await msg.answer(f"–í—ã –º–æ–∂–µ—Ç–µ –±—Ä–æ—Å–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 1 –≤—ã–∑–æ–≤–∞ –≤ 3 –º–∏–Ω—É—Ç—ã. –û—Å—Ç–∞–ª–æ—Å—å: {60 * 3 - round(time.time() - player.lastreq)} —Å–µ–∫.")

            target_id = await parse_user_id(msg)

            if not target_id or target_id < 0:
                return await msg.answer("–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —Ü–µ–ª—å –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ.")

            if msg.user_id == target_id:
                return await msg.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å –Ω–∞ –¥—É—ç–ª—å —Å–µ–±—è.")

            try:
                await peewee_async.create_object(Duel, chat_id=msg.chat_id, userid1=msg.user_id, userid2=target_id)
            except peewee.IntegrityError:
                return await msg.answer(f"[id{target_id}|–í—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤?]\n–ù–∞–ø–∏—à–∏—Ç–µ \"{self.prefixes[0]}{self.commands[4]}\", —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å.")

            player.lastreq = time.time()

            await self.pwmanager.update(player)

            return await msg.answer(f"[id{target_id}|–í—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤?]\n–ù–∞–ø–∏—à–∏—Ç–µ \"{self.prefixes[0]}{self.commands[4]}\", —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å.")

        if msg.meta["__pltext"].lower() == self.commands[2]:
            if time.time() - player.last_payout >= 60 * 60:
                gain = 50 + round((player.state / 100) * 200)

                player.last_payout = time.time()
                player.money += gain
                await self.pwmanager.update(player)

                return await msg.answer(f"üí∞ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏: {gain}$\nüí∞ –ó–∞—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ —á–∞—Å!")

            await self.pwmanager.update(player)

            return await msg.answer(f"üí∞ –í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∑–ø —á–µ—Ä–µ–∑ {60 - round((time.time() - player.last_payout) / 60)} –º–∏–Ω.")


        elif msg.meta["__pltext"].lower() == self.commands[0]:
            users =await self.api.users.get(user_ids=msg.user_id)
            user = users[0]

            level, exp_left = self.get_level(player.wins * 10 + player.losses * 5)

            text = (
                "üí¨ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ:\n"
                f"üå≥ {user['first_name']} {user['last_name']}\n"
                f"üå≥ –£—Ä–æ–≤–µ–Ω—å: {level}\n"
                f"üå≥ –û–ø—ã—Ç–∞ –¥–æ –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è: {round(exp_left)}\n"
                f"üå≥ –°–æ—Å—Ç–æ—è–Ω–∏–µ: {player.state}%\n"
                f"üå≥ –ë–æ–≥–∞—Ç—Å—Ç–≤–∞: {player.money}$\n"
                f"üå≥ –ü–æ–±–µ–¥—ã/–ø–æ—Ä–∞–∂–µ–Ω–∏—è: {player.wins}/{player.losses}\n"
                "üå≥ –°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ:\n"
            )

            if player.helm:
                text += "- ‚õë " + player.helm.name + " (üí™ " + str(player.helm.power) + ")"
            else:
                text += "- ‚õë –ù–∏—á–µ–≥–æ"

            text += "\n"

            if player.chest:
                text += "- üõ° " + player.chest.name + " (üí™ " + str(player.chest.power) + ")"
            else:
                text += "- üõ° –ù–∏—á–µ–≥–æ"

            text += "\n"

            if player.weapon:
                text += "- ‚öî " + player.weapon.name + " (üí™ " + str(player.weapon.power) + ")"
            else:
                text += "- ‚öî –ù–∏—á–µ–≥–æ"

            await self.pwmanager.update(player)

            return await msg.answer(text)
